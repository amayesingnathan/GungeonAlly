version: "3.9"  # optional since v1.27.0

volumes:
  sqlserver_data:

services:
  gungeon_ally:
    build: 
      context: .
      dockerfile: Dockerfile.WebApp
    container_name: gungeon_ally_app
    ports:
      - "5000:80"
      
    depends_on:
      sqlserver.build:
        condition: service_completed_successfully
      
  sqlserver:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    container_name: sql_server2022
    ports: # not actually needed, because the two services are on the same network
      - "1433:1433" 
      
    volumes:
      - sqlserver_data:/var/opt/mssql
      
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Gungeon@llyLoginPassword123 -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
      
    environment:
      - ACCEPT_EULA=y
      - SA_PASSWORD=Gungeon@llyLoginPassword123
      
  sqlserver.init:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    container_name: sqlserver.init_app
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P Gungeon@llyLoginPassword123 -d master -i docker-entrypoint-initdb.d/init.sql;
      echo "All done!";
      '
      
  sqlserver.build:
    build: 
      context: .
      dockerfile: Dockerfile.WebScraper
    container_name: sqlserver.build_app
    depends_on:
      sqlserver.init:
        condition: service_completed_successfully
