@inject InventoryState State
@inherits NavigationComponent

@{
    if (Context != null)
    {
        using (var image = Image.Load(Context.ImageData))
        {
            int width = (int)Math.Round(image.Width * Scale);
            int height = (int)Math.Round(image.Height * Scale);
            image.Mutate(x => x.Resize(width, height, KnownResamplers.NearestNeighbor));

            string css = "width: 100%; height: 100%; display: flex; justify-content: center; align-items: center;";
            if (Shadow)
                css += " filter: drop-shadow(0px 35px 12px rgba(0, 0, 0, 0.8));";
            
            if (Selectable && Context.BaseID == State.CurrentItemSelected?.BaseID)
            {
                css += " filter: drop-shadow(0px 0px 10px rgba(226, 176, 9, 1));";
            }

            <div style="@css"
                @onclick="OnItemClicked" @ondblclick="OnItemDoubleClicked">
                <img src="@image.ToBase64String(PngFormat.Instance)"/>
            </div>
        }
    }
}

@code {
    protected override PageType Type => PageType.Inventory;

    [Inject]
    public IRefreshService RefreshService { get; set; }

    [Parameter]
    public ItemBase Context { get; set; }

    [Parameter]
    public double Scale { get; set; }

    [Parameter]
    public bool Selectable { get; set; } = true;

    [Parameter]
    public bool Shadow { get; set; } = false;

    private async Task OnItemClicked()
    {
        if (!Selectable)
            return;
            
        State.Select(Context);

        await RefreshService.RequestRefresh();
    }

    private async Task OnItemDoubleClicked()
    {
        if (!Selectable)
            return;

        State.Select(Context);

        NavigateTo(PageType.Ammonomicon);
        await RefreshService.RequestRefresh();
    }
}
